#define THRESHOLD 45

int sensor_1;
int sensor_2;



int cross_counter = 0;
mutex lightSensor;
mutex mutexStopVar;

int data;
string out;
string iStr;

int stopVar = 0;

task task_lineFollower(){
	Acquire(mutexStopVar);
	while(!stopVar){
	  Release(mutexStopVar);

	  Acquire(lightSensor);
	  sensor_1 = Sensor(IN_1);
	  sensor_2 = Sensor(IN_2);
	  Release(lightSensor);


	  if(sensor_1 > THRESHOLD && sensor_2 > THRESHOLD){
		    OnFwdSync(OUT_AB, 90, 0);
	  }


	  if(sensor_1 > THRESHOLD){
		    OnFwd(OUT_A, 0);
		    OnFwd(OUT_B, 80);
	  }

	  if(sensor_2 > THRESHOLD){
		    OnFwd(OUT_B, 0);
		    OnFwd(OUT_A, 80);
	  }
       }
       Off(OUT_AB);
}


task task_crossing(){
	while(true){
	  Acquire(lightSensor);
	  sensor_1 = Sensor(IN_1);
	  sensor_2 = Sensor(IN_2);
	  Release(lightSensor);


	  iStr = NumToStr(sensor_1);
	  out = StrCat("Sensor 1: ",iStr);
  	  TextOut(10, LCD_LINE1, out);

	  if(sensor_1 < THRESHOLD && sensor_2 < THRESHOLD){
		    cross_counter = cross_counter+1;

		    if(cross_counter == 2){
			    Acquire(mutexStopVar);
			    stopVar=1;
			    Release(mutexStopVar);
		    }
		    Wait(1000);
	  }
	}
}


task main(){
	SetSensorLight(IN_1);
	SetSensorLight(IN_2);
	Precedes(task_lineFollower, task_crossing);
}
